#!/bin/bash

# College Climb - Quick Setup Script
# This script helps you configure the platform for first use

echo "üéì College Climb Platform Setup"
echo "================================"
echo ""

# Check if .env exists
if [ -f .env ]; then
    echo "‚úÖ .env file already exists"
    echo ""
    read -p "Do you want to overwrite it? (y/N) " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "Keeping existing .env file"
    else
        cp .env.example .env
        echo "‚úÖ Created new .env from template"
    fi
else
    cp .env.example .env
    echo "‚úÖ Created .env from template"
fi

echo ""
echo "üìù Configuration needed:"
echo "========================"
echo ""

# Check if OpenAI key is set
if grep -q "your_openai_api_key_here" .env; then
    echo "‚ö†Ô∏è  OPENAI_API_KEY not configured"
    echo ""
    echo "To get your OpenAI API key:"
    echo "1. Go to https://platform.openai.com/api-keys"
    echo "2. Sign up or log in"
    echo "3. Click 'Create new secret key'"
    echo "4. Copy the key (starts with sk-)"
    echo ""
    read -p "Enter your OpenAI API key (or press Enter to skip): " openai_key
    if [ ! -z "$openai_key" ]; then
        # Escape special characters for sed
        escaped_key=$(echo "$openai_key" | sed 's/[&/\]/\\&/g')
        sed -i.bak "s/OPENAI_API_KEY=your_openai_api_key_here/OPENAI_API_KEY=$escaped_key/" .env
        rm .env.bak
        echo "‚úÖ OpenAI API key configured"
    else
        echo "‚è≠Ô∏è  Skipped OpenAI key setup (you can add it later in .env)"
    fi
else
    echo "‚úÖ OPENAI_API_KEY already configured"
fi

echo ""

# Check if College Scorecard key is set
if grep -q "your_college_scorecard_api_key_here" .env; then
    echo "‚ö†Ô∏è  COLLEGE_SCORECARD_API_KEY not configured (optional)"
    echo ""
    echo "To get College Scorecard API key (optional but recommended):"
    echo "1. Go to https://collegescorecard.ed.gov/data/documentation/"
    echo "2. Request an API key (free)"
    echo ""
    read -p "Enter your College Scorecard API key (or press Enter to skip): " scorecard_key
    if [ ! -z "$scorecard_key" ]; then
        escaped_key=$(echo "$scorecard_key" | sed 's/[&/\]/\\&/g')
        sed -i.bak "s/COLLEGE_SCORECARD_API_KEY=your_college_scorecard_api_key_here/COLLEGE_SCORECARD_API_KEY=$escaped_key/" .env
        rm .env.bak
        echo "‚úÖ College Scorecard API key configured"
    else
        echo "‚è≠Ô∏è  Skipped College Scorecard key (you can add it later in .env)"
    fi
else
    echo "‚úÖ COLLEGE_SCORECARD_API_KEY already configured"
fi

echo ""
echo "================================"
echo "üìã Setup Summary"
echo "================================"
echo ""

# Check what's configured
openai_status="‚ùå Not configured"
scorecard_status="‚ùå Not configured"

if ! grep -q "your_openai_api_key_here" .env; then
    openai_status="‚úÖ Configured"
fi

if ! grep -q "your_college_scorecard_api_key_here" .env; then
    scorecard_status="‚úÖ Configured"
fi

echo "OpenAI API Key: $openai_status"
echo "College Scorecard API Key: $scorecard_status"
echo ""

# Next steps
echo "================================"
echo "üöÄ Next Steps"
echo "================================"
echo ""
echo "1. ‚ö†Ô∏è  Deploy Firestore Rules (CRITICAL):"
echo "   - Go to https://console.firebase.google.com"
echo "   - Select 'collegeclimb-ai' project"
echo "   - Go to Firestore Database ‚Üí Rules"
echo "   - Copy all contents from firestore.rules"
echo "   - Paste and click Publish"
echo ""
echo "2. üß™ Test the platform:"
echo "   npm run dev"
echo "   # Open http://localhost:3000"
echo ""
echo "3. üìñ Read the full audit report:"
echo "   cat COMPREHENSIVE_PLATFORM_AUDIT.md"
echo ""

# Check if npm packages are installed
if [ ! -d "node_modules" ]; then
    echo "‚ö†Ô∏è  Node modules not installed"
    echo ""
    read -p "Install dependencies now? (Y/n) " -n 1 -r
    echo ""
    if [[ ! $REPLY =~ ^[Nn]$ ]]; then
        echo "Installing dependencies..."
        npm install
        echo "‚úÖ Dependencies installed"
    fi
fi

echo ""
echo "‚ú® Setup complete! Run 'npm run dev' to start developing."
echo ""
